tet_broil <- tet_broil[!(is.na(tet_broil$N_2014) & is.na(tet_broil$N_2016) & is.na(tet_broil$N_2017) &
is.na(tet_broil$N_2018)),]
colnames(tet_broil)[10:13] <- as.character(c(2014, 2016, 2017, 2018))
tet_broil_melt <- melt(tet_broil, id.vars = "Country", measure.vars = c("2014", "2016", "2017", "2018"))
tet_broil_melt$N <- unlist(tet_broil[2:5])
tet_broil_melt$PosIsol <- unlist(tet_broil[6:9])
tet_broil_melt$value[is.na(tet_broil_melt$N)] <- NA
tet_broil_melt$PosIsol[is.na(tet_broil_melt$N)] <- NA
tet_broil_melt$lower <- 0; tet_broil_melt$upper <- 0
for(i in 1:nrow(tet_broil_melt)) {
if(!is.na(tet_broil_melt[i, "N"])) {
tet_broil_melt[i,"lower"] <- prop.test(tet_broil_melt$PosIsol[i],tet_broil_melt$N[i])[[6]][[1]]
tet_broil_melt[i,"upper"] <- prop.test(tet_broil_melt$PosIsol[i],tet_broil_melt$N[i])[[6]][[2]]
} else{
tet_broil_melt[i,"lower"] <- NA
tet_broil_melt[i,"upper"] <- NA
}
}
p4 <- ggplot(tet_broil_melt, aes(x = variable, y = value, group = Country, color = Country)) + geom_point(position = position_dodge(2)) +
geom_errorbar(aes(ymin=lower, ymax=upper, color = Country),  size=0.5, width = 0) + coord_flip() +
facet_grid(Country~., scales = "free", space = "free") + theme_bw() + labs(x = "Surveillance Year", y = "Proportion of Tetracycline Resistant Isolates") +
theme(strip.text.y = element_text(angle = 0), plot.margin = unit(c(1,1,1,1), "cm"),
legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# Saving the Plots --------------------------------------------------------
p_fatpig <- ggarrange(p1,p3, ncol = 2)
ggsave(p_fatpig, filename = "prev_fatpig.png", dpi = 300, type = "cairo", width = 12, height = 12, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
p_broil <- ggarrange(p2,p4, ncol = 2)
ggsave(p_broil, filename = "prev_broil.png", dpi = 300, type = "cairo", width = 12, height = 12, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
# USAGE - Fattening Pigs ------------------------------------------------------
#Ampicillin
amp_use_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
amp_use_pigs <- amp_use_pigs[,c(1, 27:31 )]
colnames(amp_use_pigs)[2:6] <- as.character(seq(2015, 2019))
amp_pigsusage_melt <- melt(amp_use_pigs, id.vars = "Country", measure.vars = c("2015","2016","2017","2018","2019"))
p_amp_pigsusage <- ggplot(amp_pigsusage_melt, aes(x = variable, y = value, group = Country, color = Country)) + geom_point(position = position_dodge(2)) +
coord_flip() + facet_grid(Country~., scales = "free", space = "free") + theme_bw() + labs(x = "Surveillance Year", y = "Ampicillin Usage in Fat Pigs (mg/PCU)") +
theme(strip.text.y = element_text(angle = 0), plot.margin = unit(c(1,1,1,1), "cm"),axis.text.y=element_blank() ,
legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#Tetracycline
tet_use_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
tet_use_pigs <- tet_use_pigs[,c(1, 32:36 )]
colnames(tet_use_pigs)[2:6] <- as.character(seq(2015, 2019))
tet_pigsusage_melt <- melt(tet_use_pigs, id.vars = "Country", measure.vars = c("2015","2016","2017","2018","2019"))
p_tet_pigsusage <- ggplot(tet_pigsusage_melt, aes(x = variable, y = value, group = Country, color = Country)) + geom_point(position = position_dodge(2)) +
coord_flip() + facet_grid(Country~., scales = "free", space = "free") + theme_bw() + labs(x = "Surveillance Year", y = "Tetracycline Usage in Fat Pigs (mg/PCU)") +
theme(strip.text.y = element_text(angle = 0), plot.margin = unit(c(1,1,1,1), "cm"),axis.text.y=element_blank() ,
legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# USAGE - Broiler Poultry  ------------------------------------------------------
#Ampicillin
amp_use_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/broil_usage_years.csv")
amp_use_broil <- amp_use_broil[,c(1, 22:25)]
colnames(amp_use_broil)[2:5] <- as.character(c(2014, 2016, 2017, 2018))
amp_broilusage_melt <- melt(amp_use_broil, id.vars = "Country", measure.vars = c("2014", "2016", "2017", "2018"))
p_amp_broilusage <- ggplot(amp_broilusage_melt, aes(x = variable, y = value, group = Country, color = Country)) + geom_point(position = position_dodge(2)) +
coord_flip() + facet_grid(Country~., scales = "free", space = "free") + theme_bw() + labs(x = "Surveillance Year", y = "Ampicillin Usage in Broilers (mg/PCU)") +
theme(strip.text.y = element_text(angle = 0), plot.margin = unit(c(1,1,1,1), "cm"),axis.text.y=element_blank() ,
legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#Tetracycline
tet_use_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/broil_usage_years.csv")
tet_use_broil <- tet_use_broil[,c(1, 26:29)]
colnames(tet_use_broil)[2:5] <- as.character(c(2014, 2016, 2017, 2018))
tet_broilusage_melt <- melt(tet_use_broil, id.vars = "Country", measure.vars = c("2014", "2016", "2017", "2018"))
p_tet_broilusage <- ggplot(tet_broilusage_melt, aes(x = variable, y = value, group = Country, color = Country)) + geom_point(position = position_dodge(2)) +
coord_flip() + facet_grid(Country~., scales = "free", space = "free") + theme_bw() + labs(x = "Surveillance Year", y = "Tetracycline Usage in Broilers (mg/PCU)") +
theme(strip.text.y = element_text(angle = 0), plot.margin = unit(c(1,1,1,1), "cm"),axis.text.y=element_blank() ,
legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# Saving the Plots - Usage --------------------------------------------------------
p_fatpigusage <- ggarrange(p_amp_pigsusage, p_tet_pigsusage, ncol = 2)
ggsave(p_fatpigusage, filename = "usage_fatpig.png", dpi = 300, type = "cairo", width = 8, height = 10, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
p_broilusage <- ggarrange(p_amp_broilusage, p_tet_broilusage, ncol = 2)
ggsave(p_broilusage, filename = "usage_broil.png", dpi = 300, type = "cairo", width = 8, height = 10, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
library(reshape2); library(ggplot2); library(ggpubr); library(betareg)
rm(list=ls())
# Import and Clean Data - Broilers (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Chapter2_Fit_Data/Final_Data/Amp_Broil_Years.csv")
amp_broil[,(2+4):(5+4)][amp_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
amp_broil[,2:5][amp_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
amp_broil <- amp_broil[!(is.na(amp_broil$N_2014) & is.na(amp_broil$N_2016) & is.na(amp_broil$N_2017) &
is.na(amp_broil$N_2018)),]
colnames(amp_broil)[10:13] <- as.character(c(2014, 2016, 2017, 2018))
# Tetracycline Resistance
tet_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Chapter2_Fit_Data/Final_Data/Tet_Broil_Years.csv")
tet_broil[,(2+4):(5+4)][tet_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
tet_broil[,2:5][tet_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
tet_broil <- tet_broil[!(is.na(tet_broil$N_2014) & is.na(tet_broil$N_2016) & is.na(tet_broil$N_2017) &
is.na(tet_broil$N_2018)),]
colnames(tet_broil)[10:13] <- as.character(c(2014, 2016, 2017, 2018))
#Check that we have the same countries for tetracycline and ampicillin usage
tet_broil$Country %in% amp_broil$Country
#Broiler Usage
usage_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Chapter2_Fit_Data/Final_Data/broil_usage_years.csv")
usage_broil <- usage_broil[usage_broil$Country %in% intersect(usage_broil$Country, amp_broil$Country),]
# Import and Clean Data - Fattening Pigs (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Chapter2_Fit_Data/Final_Data/Amp_FatPigs_Years.csv")
amp_pigs[,(2+5):(6+5)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,(2+10):(6+10)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,2:6][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs <- amp_pigs[!(is.na(amp_pigs$N_2015) & is.na(amp_pigs$N_2016) & is.na(amp_pigs$N_2017) &
is.na(amp_pigs$N_2018) & is.na(amp_pigs$N_2019)),]
colnames(amp_pigs)[12:16] <- as.character(seq(2015, 2019))
# Tetracycline Resistance
tet_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Chapter2_Fit_Data/Final_Data/Tet_FatPigs_Years.csv")
tet_pigs[,(2+5):(6+5)][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs[,(2+10):(6+10)][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs[,2:6][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs <- tet_pigs[!(is.na(tet_pigs$N_2015) & is.na(tet_pigs$N_2016) & is.na(tet_pigs$N_2017) &
is.na(tet_pigs$N_2018) & is.na(tet_pigs$N_2019)),]
colnames(tet_pigs)[12:16] <- as.character(seq(2015, 2019))
#Check that we have the same countries for tetracycline and ampicillin usage
tet_pigs$Country %in% amp_pigs$Country
#Broiler Usage
usage_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Chapter2_Fit_Data/Final_Data/pig_usage_years.csv")
usage_pigs <- usage_pigs[usage_pigs$Country %in% intersect(usage_pigs$Country, tet_pigs$Country),]
# Stat Testing BROILERS -------------------------------------------------------------
#Create the Combined Dataset
broil_rel <- data.frame("country" = usage_broil$Country,
"usage_amp" = rowMeans(usage_broil[,22:25], na.rm = TRUE),
"usage_tet" = rowMeans(usage_broil[,26:29], na.rm = TRUE),
"N" = rowSums(amp_broil[,2:5], na.rm = TRUE),
"isolpos_amp" = rowSums(amp_broil[,6:9], na.rm = TRUE),
"isolpos_tet" = rowSums(tet_broil[,6:9], na.rm = TRUE))
broil_rel$propres_amp <- broil_rel$isolpos_amp /  broil_rel$N
broil_rel$propres_tet <- broil_rel$isolpos_tet /  broil_rel$N
broil_rel$propres_amp_trans <- ((broil_rel$propres_amp*(nrow(broil_rel)-1)) + 0.5)/nrow(broil_rel)
broil_rel$propres_tet_trans <- ((broil_rel$propres_tet*(nrow(broil_rel)-1)) + 0.5)/nrow(broil_rel)
broil_rel$lower_amp <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_amp[i],broil_rel$N[i])[[6]][[1]]))
broil_rel$upper_amp <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_amp[i],broil_rel$N[i])[[6]][[2]]))
broil_rel$lower_tet <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_tet[i],broil_rel$N[i])[[6]][[1]]))
broil_rel$upper_tet <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_tet[i],broil_rel$N[i])[[6]][[2]]))
#Stat Test
broil_stat_amp <- betareg(propres_amp_trans ~ usage_amp, broil_rel)
broil_stat_tet <- betareg(propres_tet_trans ~ usage_tet, data = broil_rel)
summary(broil_stat_amp)
summary(broil_stat_tet)
broil_amp <- ggplot(broil_rel, aes(x = usage_amp, y = propres_amp)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(broil_stat_amp, broil_rel), x = usage_amp), colour = "red", size = 1.2) +
geom_errorbar(aes(ymin=lower_amp, ymax=upper_amp),  size=0.5, width = 0) +
labs(title = "Ampicillin Usage in Broilers: 2014-2018", x = "Ampicillin Usage", y = "Proportion Broilers Resistant")
broil_tet <- ggplot(broil_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(broil_stat_tet, broil_rel), x = usage_tet), colour = "red", size = 1.2) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0)+
labs(title = "Tetracycline Usage in Broilers: 2014-2018", x = "Tetracycline Usage", y = "Proportion Broilers Resistant")
# Stat Testing - FATTENING PIGS -------------------------------------------------------------
pig_rel <- data.frame("Country" = usage_pigs$Country,
"usage_amp" = rowMeans(usage_pigs[,27:31], na.rm = TRUE),
"usage_tet" = rowMeans(usage_pigs[,32:36], na.rm = TRUE),
"N" = rowSums(amp_pigs[,2:6], na.rm = TRUE),
"isolpos_amp" = rowSums(amp_pigs[,7:11], na.rm = TRUE),
"isolpos_tet" = rowSums(tet_pigs[,7:11], na.rm = TRUE))
pig_rel$propres_amp <- pig_rel$isolpos_amp /  pig_rel$N
pig_rel$propres_tet <- pig_rel$isolpos_tet /  pig_rel$N
pig_rel$propres_amp_trans <- ((pig_rel$propres_amp*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$propres_tet_trans <- ((pig_rel$propres_tet*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$lower_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[2]]))
pig_rel$lower_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[2]]))
#Stat Test
pig_stat_amp <- betareg(propres_amp_trans ~ usage_amp, pig_rel)
pig_stat_tet <- betareg(propres_tet_trans ~ usage_tet, data = pig_rel)
summary(pig_stat_amp)
summary(pig_stat_tet)
pig_amp <- ggplot(pig_rel, aes(x = usage_amp, y = propres_amp)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_amp, pig_rel), x = usage_amp), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_amp, ymax=upper_amp),  size=0.5, width = 0) +
labs(title = "Ampicillin Usage in Fat Pigs: 2015-2019", x = "Ampicillin Usage", y = "Proportion Pigs Resistant")
pig_tet <- ggplot(pig_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_tet, pig_rel), x = usage_tet), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0) +
labs(title = "Tetracycline Usage in Fat Pigs: 2015-2019", x = "Tetracycline Usage", y = "Proportion Pigs Resistant")
# Comb Plots --------------------------------------------------------------
broilers <- ggarrange(broil_amp, broil_tet, ncol = 2, nrow = 1)
pigs <- ggarrange(pig_amp, pig_tet, ncol = 2, nrow = 1)
ggsave(broilers, filename = "broil_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
ggsave(pigs, filename = "pigs_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
usage_pigs
read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/pig_usage_years.csv")
read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
library(reshape2); library(ggplot2); library(ggpubr); library(betareg)
rm(list=ls())
# Import and Clean Data - Broilers (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Amp_Broil_Years.csv")
amp_broil[,(2+4):(5+4)][amp_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
amp_broil[,2:5][amp_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
amp_broil <- amp_broil[!(is.na(amp_broil$N_2014) & is.na(amp_broil$N_2016) & is.na(amp_broil$N_2017) &
is.na(amp_broil$N_2018)),]
colnames(amp_broil)[10:13] <- as.character(c(2014, 2016, 2017, 2018))
# Tetracycline Resistance
tet_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Tet_Broil_Years.csv")
tet_broil[,(2+4):(5+4)][tet_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
tet_broil[,2:5][tet_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
tet_broil <- tet_broil[!(is.na(tet_broil$N_2014) & is.na(tet_broil$N_2016) & is.na(tet_broil$N_2017) &
is.na(tet_broil$N_2018)),]
colnames(tet_broil)[10:13] <- as.character(c(2014, 2016, 2017, 2018))
#Check that we have the same countries for tetracycline and ampicillin usage
tet_broil$Country %in% amp_broil$Country
#Broiler Usage
usage_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/broil_usage_years.csv")
usage_broil <- usage_broil[usage_broil$Country %in% intersect(usage_broil$Country, amp_broil$Country),]
# Import and Clean Data - Fattening Pigs (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Amp_FatPigs_Years.csv")
amp_pigs[,(2+5):(6+5)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,(2+10):(6+10)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,2:6][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs <- amp_pigs[!(is.na(amp_pigs$N_2015) & is.na(amp_pigs$N_2016) & is.na(amp_pigs$N_2017) &
is.na(amp_pigs$N_2018) & is.na(amp_pigs$N_2019)),]
colnames(amp_pigs)[12:16] <- as.character(seq(2015, 2019))
# Tetracycline Resistance
tet_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Tet_FatPigs_Years.csv")
tet_pigs[,(2+5):(6+5)][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs[,(2+10):(6+10)][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs[,2:6][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs <- tet_pigs[!(is.na(tet_pigs$N_2015) & is.na(tet_pigs$N_2016) & is.na(tet_pigs$N_2017) &
is.na(tet_pigs$N_2018) & is.na(tet_pigs$N_2019)),]
colnames(tet_pigs)[12:16] <- as.character(seq(2015, 2019))
#Check that we have the same countries for tetracycline and ampicillin usage
tet_pigs$Country %in% amp_pigs$Country
#Broiler Usage
usage_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
usage_pigs <- usage_pigs[usage_pigs$Country %in% intersect(usage_pigs$Country, tet_pigs$Country),]
# Stat Testing BROILERS -------------------------------------------------------------
#Create the Combined Dataset
broil_rel <- data.frame("country" = usage_broil$Country,
"usage_amp" = rowMeans(usage_broil[,22:25], na.rm = TRUE),
"usage_tet" = rowMeans(usage_broil[,26:29], na.rm = TRUE),
"N" = rowSums(amp_broil[,2:5], na.rm = TRUE),
"isolpos_amp" = rowSums(amp_broil[,6:9], na.rm = TRUE),
"isolpos_tet" = rowSums(tet_broil[,6:9], na.rm = TRUE))
broil_rel$propres_amp <- broil_rel$isolpos_amp /  broil_rel$N
broil_rel$propres_tet <- broil_rel$isolpos_tet /  broil_rel$N
broil_rel$propres_amp_trans <- ((broil_rel$propres_amp*(nrow(broil_rel)-1)) + 0.5)/nrow(broil_rel)
broil_rel$propres_tet_trans <- ((broil_rel$propres_tet*(nrow(broil_rel)-1)) + 0.5)/nrow(broil_rel)
broil_rel$lower_amp <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_amp[i],broil_rel$N[i])[[6]][[1]]))
broil_rel$upper_amp <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_amp[i],broil_rel$N[i])[[6]][[2]]))
broil_rel$lower_tet <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_tet[i],broil_rel$N[i])[[6]][[1]]))
broil_rel$upper_tet <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_tet[i],broil_rel$N[i])[[6]][[2]]))
#Stat Test
broil_stat_amp <- betareg(propres_amp_trans ~ usage_amp, broil_rel)
broil_stat_tet <- betareg(propres_tet_trans ~ usage_tet, data = broil_rel)
summary(broil_stat_amp)
summary(broil_stat_tet)
broil_amp <- ggplot(broil_rel, aes(x = usage_amp, y = propres_amp)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(broil_stat_amp, broil_rel), x = usage_amp), colour = "red", size = 1.2) +
geom_errorbar(aes(ymin=lower_amp, ymax=upper_amp),  size=0.5, width = 0) +
labs(title = "Ampicillin Usage in Broilers: 2014-2018", x = "Ampicillin Usage", y = "Proportion Broilers Resistant")
broil_tet <- ggplot(broil_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(broil_stat_tet, broil_rel), x = usage_tet), colour = "red", size = 1.2) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0)+
labs(title = "Tetracycline Usage in Broilers: 2014-2018", x = "Tetracycline Usage", y = "Proportion Broilers Resistant")
# Stat Testing - FATTENING PIGS -------------------------------------------------------------
pig_rel <- data.frame("Country" = usage_pigs$Country,
"usage_amp" = rowMeans(usage_pigs[,27:31], na.rm = TRUE),
"usage_tet" = rowMeans(usage_pigs[,32:36], na.rm = TRUE),
"N" = rowSums(amp_pigs[,2:6], na.rm = TRUE),
"isolpos_amp" = rowSums(amp_pigs[,7:11], na.rm = TRUE),
"isolpos_tet" = rowSums(tet_pigs[,7:11], na.rm = TRUE))
pig_rel$propres_amp <- pig_rel$isolpos_amp /  pig_rel$N
pig_rel$propres_tet <- pig_rel$isolpos_tet /  pig_rel$N
pig_rel$propres_amp_trans <- ((pig_rel$propres_amp*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$propres_tet_trans <- ((pig_rel$propres_tet*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$lower_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[2]]))
pig_rel$lower_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[2]]))
#Stat Test
pig_stat_amp <- betareg(propres_amp_trans ~ usage_amp, pig_rel)
pig_stat_tet <- betareg(propres_tet_trans ~ usage_tet, data = pig_rel)
summary(pig_stat_amp)
summary(pig_stat_tet)
pig_amp <- ggplot(pig_rel, aes(x = usage_amp, y = propres_amp)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_amp, pig_rel), x = usage_amp), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_amp, ymax=upper_amp),  size=0.5, width = 0) +
labs(title = "Ampicillin Usage in Fat Pigs: 2015-2019", x = "Ampicillin Usage", y = "Proportion Pigs Resistant")
pig_tet <- ggplot(pig_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_tet, pig_rel), x = usage_tet), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0) +
labs(title = "Tetracycline Usage in Fat Pigs: 2015-2019", x = "Tetracycline Usage", y = "Proportion Pigs Resistant")
# Comb Plots --------------------------------------------------------------
broilers <- ggarrange(broil_amp, broil_tet, ncol = 2, nrow = 1)
pigs <- ggarrange(pig_amp, pig_tet, ncol = 2, nrow = 1)
ggsave(broilers, filename = "broil_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
ggsave(pigs, filename = "pigs_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
library(reshape2); library(ggplot2); library(ggpubr); library(betareg)
rm(list=ls())
# Functions ---------------------------------------------------------------
sum_square_diff_dist <- function(data.obs, model.obs) {
sumsquare <- abs((data.obs - model.obs)^2)
return(sum(sumsquare))
}
# Import and Clean Data - Fattening Pigs (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Amp_FatPigs_Years.csv")
amp_pigs[,(2+5):(6+5)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,(2+10):(6+10)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,2:6][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs <- amp_pigs[!(is.na(amp_pigs$N_2015) & is.na(amp_pigs$N_2016) & is.na(amp_pigs$N_2017) &
is.na(amp_pigs$N_2018) & is.na(amp_pigs$N_2019)),]
colnames(amp_pigs)[12:16] <- as.character(seq(2015, 2019))
#Check that we have the same countries for tetracycline and ampicillin usage
amp_pigs$Country %in% amp_pigs$Country
#Broiler Usage
usage_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
usage_pigs <- usage_pigs[usage_pigs$Country %in% intersect(usage_pigs$Country, amp_pigs$Country),]
# NON-AGGREGATED - AMP PIGS  -------------------------------------------------------------
melt_amp_pigs <- melt(amp_pigs, id.vars = "Country", measure.vars = c("2015", "2016", "2017", "2018", "2019"))
melt_amp_pigs$usage <- melt(usage_pigs, id.vars = "Country", measure.vars = c("scale_ampusage_2015", "scale_ampusage_2016",
"scale_ampusage_2017", "scale_ampusage_2018", "scale_ampusage_2019"))[,3]
melt_amp_pigs$N <- melt(amp_pigs, id.vars = "Country", measure.vars = c("N_2015", "N_2016",
"N_2017", "N_2018", "N_2019"))[,3]
melt_amp_pigs$IsolPos <- melt(amp_pigs, id.vars = "Country", measure.vars = c("PosIsol_2015", "PosIsol_2016",
"PosIsol_2017", "PosIsol_2018", "PosIsol_2019"))[,3]
colnames(melt_amp_pigs)[c(2,3)] <- c("Year", "Resistance")
melt_amp_pigs <- melt_amp_pigs[!is.na(melt_amp_pigs$N),]
melt_amp_pigs$lower_amp <- unlist(lapply(1:nrow(melt_amp_pigs), function(i) prop.test(melt_amp_pigs$IsolPos[i],melt_amp_pigs$N[i])[[6]][[1]]))
melt_amp_pigs$upper_amp <- unlist(lapply(1:nrow(melt_amp_pigs), function(i) prop.test(melt_amp_pigs$IsolPos[i],melt_amp_pigs$N[i])[[6]][[2]]))
#NORMAL
stat_amp_pigs <- lm(Resistance ~ usage, melt_amp_pigs); summary(stat_amp_pigs)
stat_amp_pigs
predict(stat_amp_pigs, melt_amp_pigs)
melt_amp_pigs$Resistance
data.frame("model_pred" = predict(stat_amp_pigs, melt_amp_pigs),
"data" = melt_amp_pigs$Resistance)
ss_data_amppigs_nonaggre[!is.na(ss_data_amppigs_nonaggre$model_pred),]
stat_amp_pigs <- lm(Resistance ~ usage, melt_amp_pigs); summary(stat_amp_pigs)
ss_data_amppigs_nonaggre <- data.frame("model_pred" = predict(stat_amp_pigs, melt_amp_pigs),
"data" = melt_amp_pigs$Resistance)
ss_data_amppigs_nonaggre <- ss_data_amppigs_nonaggre[!is.na(ss_data_amppigs_nonaggre$model_pred),]
ss_data_amppigs_nonaggre
ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data
abs(ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data)
sum(abs(ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data))
sum(abs((ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data)^2))
(ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data)^2
post_dist_names <- grep("ABC_post_tetpigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
(0.5*zeta)*Sa*(1-alpha) - (0.5*zeta)*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + (0.5*zeta)*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + (0.5*zeta)*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
#### Dat
post_dist_names <- grep("ABC_post_tetpigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
post_dist_names <- grep("ABC_post_tetpigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
post_dist_names <- grep("ABC_post_amppigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
post_dist_names <- grep("ABC_post_tetbroil_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
(0.5*zeta)*Sa*(1-alpha) - (0.5*zeta)*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + (0.5*zeta)*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + (0.5*zeta)*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
post_dist_names <- grep("ABC_post_ampbroil_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
