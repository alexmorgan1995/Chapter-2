broil_tet <- ggplot(broil_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(broil_stat_tet, broil_rel), x = usage_tet), colour = "red", size = 1.2) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0)+
labs(title = "Tetracycline Usage in Broilers: 2014-2018", x = "Tetracycline Usage", y = "Proportion Broilers Resistant")
# Stat Testing - FATTENING PIGS -------------------------------------------------------------
pig_rel <- data.frame("Country" = usage_pigs$Country,
"usage_amp" = rowMeans(usage_pigs[,27:31], na.rm = TRUE),
"usage_tet" = rowMeans(usage_pigs[,32:36], na.rm = TRUE),
"N" = rowSums(amp_pigs[,2:6], na.rm = TRUE),
"isolpos_amp" = rowSums(amp_pigs[,7:11], na.rm = TRUE),
"isolpos_tet" = rowSums(tet_pigs[,7:11], na.rm = TRUE))
pig_rel$propres_amp <- pig_rel$isolpos_amp /  pig_rel$N
pig_rel$propres_tet <- pig_rel$isolpos_tet /  pig_rel$N
pig_rel$propres_amp_trans <- ((pig_rel$propres_amp*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$propres_tet_trans <- ((pig_rel$propres_tet*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$lower_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[2]]))
pig_rel$lower_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[2]]))
#Stat Test
pig_stat_amp <- betareg(propres_amp_trans ~ usage_amp, pig_rel)
pig_stat_tet <- betareg(propres_tet_trans ~ usage_tet, data = pig_rel)
summary(pig_stat_amp)
summary(pig_stat_tet)
pig_amp <- ggplot(pig_rel, aes(x = usage_amp, y = propres_amp)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_amp, pig_rel), x = usage_amp), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_amp, ymax=upper_amp),  size=0.5, width = 0) +
labs(title = "Ampicillin Usage in Fat Pigs: 2015-2019", x = "Ampicillin Usage", y = "Proportion Pigs Resistant")
pig_tet <- ggplot(pig_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_tet, pig_rel), x = usage_tet), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0) +
labs(title = "Tetracycline Usage in Fat Pigs: 2015-2019", x = "Tetracycline Usage", y = "Proportion Pigs Resistant")
# Comb Plots --------------------------------------------------------------
broilers <- ggarrange(broil_amp, broil_tet, ncol = 2, nrow = 1)
pigs <- ggarrange(pig_amp, pig_tet, ncol = 2, nrow = 1)
ggsave(broilers, filename = "broil_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
ggsave(pigs, filename = "pigs_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
usage_pigs
read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/pig_usage_years.csv")
read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
library(reshape2); library(ggplot2); library(ggpubr); library(betareg)
rm(list=ls())
# Import and Clean Data - Broilers (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Amp_Broil_Years.csv")
amp_broil[,(2+4):(5+4)][amp_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
amp_broil[,2:5][amp_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
amp_broil <- amp_broil[!(is.na(amp_broil$N_2014) & is.na(amp_broil$N_2016) & is.na(amp_broil$N_2017) &
is.na(amp_broil$N_2018)),]
colnames(amp_broil)[10:13] <- as.character(c(2014, 2016, 2017, 2018))
# Tetracycline Resistance
tet_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Tet_Broil_Years.csv")
tet_broil[,(2+4):(5+4)][tet_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
tet_broil[,2:5][tet_broil[,2:5] < 10] <- NA # replace anything under a sample size of 10 with
tet_broil <- tet_broil[!(is.na(tet_broil$N_2014) & is.na(tet_broil$N_2016) & is.na(tet_broil$N_2017) &
is.na(tet_broil$N_2018)),]
colnames(tet_broil)[10:13] <- as.character(c(2014, 2016, 2017, 2018))
#Check that we have the same countries for tetracycline and ampicillin usage
tet_broil$Country %in% amp_broil$Country
#Broiler Usage
usage_broil <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/broil_usage_years.csv")
usage_broil <- usage_broil[usage_broil$Country %in% intersect(usage_broil$Country, amp_broil$Country),]
# Import and Clean Data - Fattening Pigs (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Amp_FatPigs_Years.csv")
amp_pigs[,(2+5):(6+5)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,(2+10):(6+10)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,2:6][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs <- amp_pigs[!(is.na(amp_pigs$N_2015) & is.na(amp_pigs$N_2016) & is.na(amp_pigs$N_2017) &
is.na(amp_pigs$N_2018) & is.na(amp_pigs$N_2019)),]
colnames(amp_pigs)[12:16] <- as.character(seq(2015, 2019))
# Tetracycline Resistance
tet_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Tet_FatPigs_Years.csv")
tet_pigs[,(2+5):(6+5)][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs[,(2+10):(6+10)][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs[,2:6][tet_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
tet_pigs <- tet_pigs[!(is.na(tet_pigs$N_2015) & is.na(tet_pigs$N_2016) & is.na(tet_pigs$N_2017) &
is.na(tet_pigs$N_2018) & is.na(tet_pigs$N_2019)),]
colnames(tet_pigs)[12:16] <- as.character(seq(2015, 2019))
#Check that we have the same countries for tetracycline and ampicillin usage
tet_pigs$Country %in% amp_pigs$Country
#Broiler Usage
usage_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
usage_pigs <- usage_pigs[usage_pigs$Country %in% intersect(usage_pigs$Country, tet_pigs$Country),]
# Stat Testing BROILERS -------------------------------------------------------------
#Create the Combined Dataset
broil_rel <- data.frame("country" = usage_broil$Country,
"usage_amp" = rowMeans(usage_broil[,22:25], na.rm = TRUE),
"usage_tet" = rowMeans(usage_broil[,26:29], na.rm = TRUE),
"N" = rowSums(amp_broil[,2:5], na.rm = TRUE),
"isolpos_amp" = rowSums(amp_broil[,6:9], na.rm = TRUE),
"isolpos_tet" = rowSums(tet_broil[,6:9], na.rm = TRUE))
broil_rel$propres_amp <- broil_rel$isolpos_amp /  broil_rel$N
broil_rel$propres_tet <- broil_rel$isolpos_tet /  broil_rel$N
broil_rel$propres_amp_trans <- ((broil_rel$propres_amp*(nrow(broil_rel)-1)) + 0.5)/nrow(broil_rel)
broil_rel$propres_tet_trans <- ((broil_rel$propres_tet*(nrow(broil_rel)-1)) + 0.5)/nrow(broil_rel)
broil_rel$lower_amp <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_amp[i],broil_rel$N[i])[[6]][[1]]))
broil_rel$upper_amp <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_amp[i],broil_rel$N[i])[[6]][[2]]))
broil_rel$lower_tet <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_tet[i],broil_rel$N[i])[[6]][[1]]))
broil_rel$upper_tet <- unlist(lapply(1:nrow(broil_rel), function(i) prop.test(broil_rel$isolpos_tet[i],broil_rel$N[i])[[6]][[2]]))
#Stat Test
broil_stat_amp <- betareg(propres_amp_trans ~ usage_amp, broil_rel)
broil_stat_tet <- betareg(propres_tet_trans ~ usage_tet, data = broil_rel)
summary(broil_stat_amp)
summary(broil_stat_tet)
broil_amp <- ggplot(broil_rel, aes(x = usage_amp, y = propres_amp)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(broil_stat_amp, broil_rel), x = usage_amp), colour = "red", size = 1.2) +
geom_errorbar(aes(ymin=lower_amp, ymax=upper_amp),  size=0.5, width = 0) +
labs(title = "Ampicillin Usage in Broilers: 2014-2018", x = "Ampicillin Usage", y = "Proportion Broilers Resistant")
broil_tet <- ggplot(broil_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(broil_stat_tet, broil_rel), x = usage_tet), colour = "red", size = 1.2) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0)+
labs(title = "Tetracycline Usage in Broilers: 2014-2018", x = "Tetracycline Usage", y = "Proportion Broilers Resistant")
# Stat Testing - FATTENING PIGS -------------------------------------------------------------
pig_rel <- data.frame("Country" = usage_pigs$Country,
"usage_amp" = rowMeans(usage_pigs[,27:31], na.rm = TRUE),
"usage_tet" = rowMeans(usage_pigs[,32:36], na.rm = TRUE),
"N" = rowSums(amp_pigs[,2:6], na.rm = TRUE),
"isolpos_amp" = rowSums(amp_pigs[,7:11], na.rm = TRUE),
"isolpos_tet" = rowSums(tet_pigs[,7:11], na.rm = TRUE))
pig_rel$propres_amp <- pig_rel$isolpos_amp /  pig_rel$N
pig_rel$propres_tet <- pig_rel$isolpos_tet /  pig_rel$N
pig_rel$propres_amp_trans <- ((pig_rel$propres_amp*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$propres_tet_trans <- ((pig_rel$propres_tet*(nrow(pig_rel)-1)) + 0.5)/nrow(pig_rel)
pig_rel$lower_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_amp <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_amp[i],pig_rel$N[i])[[6]][[2]]))
pig_rel$lower_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[1]]))
pig_rel$upper_tet <- unlist(lapply(1:nrow(pig_rel), function(i) prop.test(pig_rel$isolpos_tet[i],pig_rel$N[i])[[6]][[2]]))
#Stat Test
pig_stat_amp <- betareg(propres_amp_trans ~ usage_amp, pig_rel)
pig_stat_tet <- betareg(propres_tet_trans ~ usage_tet, data = pig_rel)
summary(pig_stat_amp)
summary(pig_stat_tet)
pig_amp <- ggplot(pig_rel, aes(x = usage_amp, y = propres_amp)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_amp, pig_rel), x = usage_amp), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_amp, ymax=upper_amp),  size=0.5, width = 0) +
labs(title = "Ampicillin Usage in Fat Pigs: 2015-2019", x = "Ampicillin Usage", y = "Proportion Pigs Resistant")
pig_tet <- ggplot(pig_rel, aes(x = usage_tet, y = propres_tet)) + geom_point() + theme_bw() +
geom_line(aes(y = predict(pig_stat_tet, pig_rel), x = usage_tet), colour = "red", size = 1.2) +
scale_y_continuous(limits = c(0,1)) +
geom_errorbar(aes(ymin=lower_tet, ymax=upper_tet),  size=0.5, width = 0) +
labs(title = "Tetracycline Usage in Fat Pigs: 2015-2019", x = "Tetracycline Usage", y = "Proportion Pigs Resistant")
# Comb Plots --------------------------------------------------------------
broilers <- ggarrange(broil_amp, broil_tet, ncol = 2, nrow = 1)
pigs <- ggarrange(pig_amp, pig_tet, ncol = 2, nrow = 1)
ggsave(broilers, filename = "broil_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
ggsave(pigs, filename = "pigs_comb_stat.png", dpi = 300, type = "cairo", width = 14, height = 5, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
library(reshape2); library(ggplot2); library(ggpubr); library(betareg)
rm(list=ls())
# Functions ---------------------------------------------------------------
sum_square_diff_dist <- function(data.obs, model.obs) {
sumsquare <- abs((data.obs - model.obs)^2)
return(sum(sumsquare))
}
# Import and Clean Data - Fattening Pigs (Ampicillin and Tetracycline) -----------
# Ampicillin Resistance
amp_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/Amp_FatPigs_Years.csv")
amp_pigs[,(2+5):(6+5)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,(2+10):(6+10)][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs[,2:6][amp_pigs[,2:6] < 10] <- NA # replace anything under a sample size of 10 with
amp_pigs <- amp_pigs[!(is.na(amp_pigs$N_2015) & is.na(amp_pigs$N_2016) & is.na(amp_pigs$N_2017) &
is.na(amp_pigs$N_2018) & is.na(amp_pigs$N_2019)),]
colnames(amp_pigs)[12:16] <- as.character(seq(2015, 2019))
#Check that we have the same countries for tetracycline and ampicillin usage
amp_pigs$Country %in% amp_pigs$Country
#Broiler Usage
usage_pigs <- read.csv("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/puredata/pig_usage_years.csv")
usage_pigs <- usage_pigs[usage_pigs$Country %in% intersect(usage_pigs$Country, amp_pigs$Country),]
# NON-AGGREGATED - AMP PIGS  -------------------------------------------------------------
melt_amp_pigs <- melt(amp_pigs, id.vars = "Country", measure.vars = c("2015", "2016", "2017", "2018", "2019"))
melt_amp_pigs$usage <- melt(usage_pigs, id.vars = "Country", measure.vars = c("scale_ampusage_2015", "scale_ampusage_2016",
"scale_ampusage_2017", "scale_ampusage_2018", "scale_ampusage_2019"))[,3]
melt_amp_pigs$N <- melt(amp_pigs, id.vars = "Country", measure.vars = c("N_2015", "N_2016",
"N_2017", "N_2018", "N_2019"))[,3]
melt_amp_pigs$IsolPos <- melt(amp_pigs, id.vars = "Country", measure.vars = c("PosIsol_2015", "PosIsol_2016",
"PosIsol_2017", "PosIsol_2018", "PosIsol_2019"))[,3]
colnames(melt_amp_pigs)[c(2,3)] <- c("Year", "Resistance")
melt_amp_pigs <- melt_amp_pigs[!is.na(melt_amp_pigs$N),]
melt_amp_pigs$lower_amp <- unlist(lapply(1:nrow(melt_amp_pigs), function(i) prop.test(melt_amp_pigs$IsolPos[i],melt_amp_pigs$N[i])[[6]][[1]]))
melt_amp_pigs$upper_amp <- unlist(lapply(1:nrow(melt_amp_pigs), function(i) prop.test(melt_amp_pigs$IsolPos[i],melt_amp_pigs$N[i])[[6]][[2]]))
#NORMAL
stat_amp_pigs <- lm(Resistance ~ usage, melt_amp_pigs); summary(stat_amp_pigs)
stat_amp_pigs
predict(stat_amp_pigs, melt_amp_pigs)
melt_amp_pigs$Resistance
data.frame("model_pred" = predict(stat_amp_pigs, melt_amp_pigs),
"data" = melt_amp_pigs$Resistance)
ss_data_amppigs_nonaggre[!is.na(ss_data_amppigs_nonaggre$model_pred),]
stat_amp_pigs <- lm(Resistance ~ usage, melt_amp_pigs); summary(stat_amp_pigs)
ss_data_amppigs_nonaggre <- data.frame("model_pred" = predict(stat_amp_pigs, melt_amp_pigs),
"data" = melt_amp_pigs$Resistance)
ss_data_amppigs_nonaggre <- ss_data_amppigs_nonaggre[!is.na(ss_data_amppigs_nonaggre$model_pred),]
ss_data_amppigs_nonaggre
ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data
abs(ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data)
sum(abs(ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data))
sum(abs((ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data)^2))
(ss_data_amppigs_nonaggre$model_pred - ss_data_amppigs_nonaggre$data)^2
post_dist_names <- grep("ABC_post_ampbroil_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
1/30
0.30/30
1/25
library("deSolve"); library("ggplot2"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("sensitivity"); library("fast"); library("metR");
library("grid"); library("gridExtra"); library("rootSolve"); library("metR")
rm(list=ls())
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
# Model Functions ----------------------------------------------------------
#Model ODEs
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
(0.5*zeta)*Sa*(1-alpha) - (0.5*zeta)*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + (0.5*zeta)*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + (0.5*zeta)*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
#Importing in the Datasets
import <- function(id) {
data <- data.frame(matrix(ncol = 6, nrow = 0))
for(i in 1:length(grep(paste0("post_", id), list.files(), value = TRUE))) {
test  <- cbind(read.csv(paste0("ABC_post_",substitute(id),"_",i,".csv"),
header = TRUE), "group" = paste0("data",i), "fit" = as.character(substitute(id)))
data <- rbind(data, test)
}
return(data)
}
# Identify the MAP for the Parameter Sets ---------------------------------
#Import of Posterior Distributions
data <- list(import("tetbroil"), import("ampbroil"), import("tetpigs"), import("amppigs"))
lapply(1:4, function(x) data[[x]]$group = factor(data[[x]]$group, levels = unique(data[[x]]$group)))
#Obtain the MAPs for each dataset
MAP <- rbind(c(colMeans(data[[1]][which(data[[1]]$group == tail(unique(data[[1]]$group),1)),][,1:6])),
c(colMeans(data[[2]][which(data[[2]]$group == tail(unique(data[[2]]$group),1)),][,1:6])),
c(colMeans(data[[3]][which(data[[3]]$group == tail(unique(data[[3]]$group),1)),][,1:6])),
c(colMeans(data[[4]][which(data[[4]]$group == tail(unique(data[[4]]$group),1)),][,1:6])))
colnames(MAP) <- c("betaAA", "phi", "kappa", "alpha", "zeta", "betaHA")
rownames(MAP) <- c("ampbroil", "tetbroil","amppigs", "tetpigs")
# Generic Heatmap Sensitivity Analysis - ICombH + ResRatio ------------------------
init <- c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
#These Parameters Are Based on MAP from Model Fitting
parms_ampbroil = c(ra = 0, rh = (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP["ampbroil","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["ampbroil","betaHA"], phi = MAP["ampbroil","phi"] ,
kappa = MAP["ampbroil","kappa"], alpha = MAP["ampbroil","alpha"] , tau = 0, zeta = MAP["ampbroil","zeta"])
parms_tetbroil = c(ra = 0, rh = (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP["tetbroil","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["tetbroil","betaHA"], phi = MAP["tetbroil","phi"],
kappa = MAP["tetbroil","kappa"], alpha = MAP["tetbroil","alpha"] , tau = 0,
zeta = MAP["tetbroil","zeta"])
parms_amppigs = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP["amppigs","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["amppigs","betaHA"], phi = MAP["amppigs","phi"],
kappa = MAP["amppigs","kappa"], alpha = MAP["amppigs","alpha"], tau = 0, zeta = MAP["amppigs","zeta"])
parms_tetpigs = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP["tetpigs","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["tetpigs","betaHA"], phi = MAP["tetpigs","phi"],
kappa = MAP["tetpigs","kappa"], alpha = MAP["tetpigs","alpha"], tau = 0, zeta = MAP["tetpigs","zeta"])
heatmap <- list()
for(j in 1:4) {
parms = list(parms_ampbroil, parms_tetbroil, parms_amppigs,parms_tetpigs)[[j]]
heatmap[[j]] = local({
parametertest <- list()
parms1 <- parms
i = 0
for(z in 1:3) {
if(z == 1) {
parameterspace <- expand.grid("betaAA" = seq(parms[["betaAA"]]*0, parms[["betaAA"]], by = parms[["betaAA"]]/30),
"betaHA" = seq(parms[["betaHA"]]*0.70, parms[["betaHA"]], by = parms[["betaHA"]]*0.30/30))
}
if(z == 2) {
parameterspace <- expand.grid("zeta" = seq(parms[["zeta"]]*0, parms[["zeta"]], by = parms[["zeta"]]/30),
"betaHA" = seq(parms[["betaHA"]]*0.70, parms[["betaHA"]], by = parms[["betaHA"]]*0.30/30))
}
if(z == 3) {
parameterspace <- expand.grid("both" = seq(0, 1, by = 1/30),
"betaHA" = seq(parms[["betaHA"]]*0.70, parms[["betaHA"]], by = parms[["betaHA"]]*0.30/30))
}
scendata <- data.frame(matrix(nrow = nrow(parameterspace), ncol = 10))
for(i in 1:nrow(parameterspace)) {
#print(paste0("HeatMap - ", c("tet_pigs", "tet_broil", "amp_pigs")[j]," | ", round(i/nrow(parameterspace), digits = 3)*100, "%"))
parms1["betaHA"] <- parameterspace[i,2]
if(z == 1) {
parms1["betaAA"] <- parameterspace[i,1]
}
if(z == 2) {
parms1["zeta"] <- parameterspace[i,1]
}
if(z == 3) {
parms1["betaAA"] <- parms["betaAA"]*parameterspace[i,1]
parms1["zeta"] <- parms["zeta"]*parameterspace[i,1]
}
out <- runsteady(y = init, func = amr, times = c(0, Inf), parms = parms1)
scendata[i,] <- c("icombh" = ((out[[2]] + out[[3]])*(446000000))/100000,
"prevH" =  out[[1]][["Ish"]] + out[[1]][["Irh"]],
"resrat" =  out[[1]][["Irh"]] / (out[[1]][["Ish"]] + out[[1]][["Irh"]]),
"betaAA" = parms[["betaAA"]],
"percbetaAA" = (parms1[["betaAA"]]/ parms[["betaAA"]])*100,
"betaHA" = parms1[["betaHA"]],
"percbetaHA" = (parms1[["betaHA"]]/ parms[["betaHA"]])*100,
"zeta" = parms1[["zeta"]],
"perczeta" = (parms1[["zeta"]]/ parms[["zeta"]])*100,
"percdecrease_both" = parameterspace[i,1]*100)
if(z == 1 | 2) {
scendata[["percdecrease_both"]] == 1
}
print(paste0(c("ampbroil", "tetbroil", "amppigs", "tetpigs")[j], " - " ,
c("beta 1", "zeta 2", "both 3")[z], " - ",round(i/nrow(parameterspace), digit = 2)*100, "%"))
}
colnames(scendata) <- c("icombh","prevH", "resrat", "betaAA","percbetaAA", "betaHA", "percbetaHA", "zeta", "perczeta", "percdecrease")
parametertest[[z]] <- scendata
}
return(parametertest)
})
}
scentest <- heatmap[[1]][[3]]
breaks <- c(0, 3.26, seq(3.26, max(scentest$prevH)*100000, by = 1))
ggplot(scentest, aes(percbetaAA, percbetaHA, z = prevH*100000)) + metR::geom_contour_fill(breaks = breaks, color = "black", size = 0.1)  +
geom_contour(color = "red", size = 1, breaks = 3.26, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70, 1, by = 0.30/8))) +
scale_y_continuous(expand = c(0,0), limits = c(70, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(70, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 18, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.75, "cm"),
legend.key.width =  unit(2, "cm"))
# Plotting ----------------------------------------------------------------
plotheat <- list()
for(i in 1:4) {
plottemp <- list()
for(j in 1:3) {
scentest <- heatmap[[i]][[j]]
breaks <- c(0, 0.593, seq(0.593, max(scentest$icombh)+0.05, by = c(0.02, 0.015, 0.025, 0.03)[i]))
if(j == 1) {
plot <- ggplot(scentest, aes(percbetaAA, percbetaHA, z = icombh)) +
labs(x = bquote("% of Baseline"~beta["AA"]), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]),
title = paste(""))
}
if(j == 2) {
plot <- ggplot(scentest, aes(perczeta, percbetaHA, z = icombh)) +
labs(x = bquote("% of Baseline"~zeta), y = bquote("% of Baseline"~beta["HA"]), fill = "ICombH", title = "")
}
if(j == 3) {
plot <- ggplot(scentest, aes(percdecrease, percbetaHA, z = icombh)) +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = "ICombH", title = "")
}
plot <- plot + metR::geom_contour_fill(breaks = breaks, color = "black", size = 0.1)  +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70, 1, by = 0.30/8))) +
scale_y_continuous(expand = c(0,0), limits = c(70, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(70, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 18, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.75, "cm"),
legend.key.width =  unit(2, "cm"))
plottemp[[j]] <- plot
}
combplot <- ggarrange(plottemp[[1]], plottemp[[2]], plottemp[[3]], ncol = 3, nrow = 1, common.legend = TRUE,
legend = "bottom", labels = c("A", "B", "C", "D")[i], font.label = list(size = 25), vjust = 1.2)
title1=text_grob(c("Ampicillin Sales in Broiler Poultry","Tetracycline Sales in Broiler Poultry",
"Ampicillin Sales in Fattening Pigs", "Tetracycline Sales in Fattening Pigs")[i], size = 18, face = "bold", vjust = 2)
combplot <- grid.arrange(combplot, top = title1)
plotheat[[i]] <- combplot
}
combplot <- ggarrange(plotheat[[1]], plotheat[[2]], plotheat[[3]],plotheat[[4]], ncol = 1, nrow = 4)
ggplot(scentest, aes(percbetaAA, percbetaHA, z = prevH*100000)) + metR::geom_contour_fill(breaks = breaks, color = "black", size = 0.1)  +
geom_contour(color = "red", size = 1, breaks = 3.26, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70, 1, by = 0.30/8)))
percbetaAA
scentest
expand.grid("betaAA" = seq(parms[["betaAA"]]*0, parms[["betaAA"]], by = parms[["betaAA"]]/30),
"betaHA" = seq(parms[["betaHA"]]*0.70, parms[["betaHA"]], by = parms[["betaHA"]]*0.30/30))
seq(parms[["betaAA"]]*0, parms[["betaAA"]], by = parms[["betaAA"]]/30)
seq(parms[["betaHA"]]*0.70, parms[["betaHA"]], by = parms[["betaHA"]]*0.30/30)
seq(0, 1, by = 1/30)
View(plotheat)
View(scentest)
ggplot(scentest, aes(percbetaAA, percbetaHA, z = prevH*100000)) + metR::geom_contour_fill(breaks = breaks, color = "black", size = 0.1)  +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8)
ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8)
scentest1 <- heatmap[[1]][[3]]
scentest2 <- heatmap[[2]][[3]]
scentest3 <- heatmap[[3]][[3]]
scentest4 <- heatmap[[4]][[3]]
breaks1 <- c(0, seq(0.593, max(scentest1$icombh)+0.05, by = 0.02))
ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8)
ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks1, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks1, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70,1, by = 0.30/8))) +
scale_y_continuous(expand = c(0,0), limits = c(70, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
scentest1 <- heatmap[[1]][[3]]
scentest2 <- heatmap[[2]][[3]]
scentest3 <- heatmap[[3]][[3]]
scentest4 <- heatmap[[4]][[3]]
breaks1 <- c(0, seq(0.593, max(scentest1$icombh)+0.05, by = 0.02))
plot1 <- ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks1, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks1, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70,1, by = 0.30/8))) +
scale_y_continuous(expand = c(0,0), limits = c(70, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks2 <- c(0,  seq(0.593, max(scentest2$icombh)+0.05, by = 0.015))
plot2 <- ggplot(scentest2, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks2, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]),
title = "Tetracycline Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks2, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks2, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70,1, by = 0.30/8))) +
scale_y_continuous(expand = c(0,0), limits = c(70, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks3 <- c(0,  seq(0.593, max(scentest3$icombh)+0.05, by = 0.025))
plot3 <- ggplot(scentest3, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks3, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Fattening Pigs") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks3, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks3, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70,1, by = 0.30/8))) +
scale_y_continuous(expand = c(0,0), limits = c(70, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks4 <- c(0,  seq(0.593, max(scentest4$icombh)+0.05, by = 0.03))
plot4 <- ggplot(scentest4, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks4, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Tetracycline Usage in Fattening Pigs") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks3, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks4, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.70,1, by = 0.30/8))) +
scale_y_continuous(expand = c(0,0), limits = c(70, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
#combplot_solo <- ggarrange(plot1, plot2, plot3,  plot4, ncol = 1, nrow = 4, labels = c("A", "B", "C", "D"), font.label = list(size = 20), vjust = 1.2)
#ggsave(combplot_solo, filename = "HeatMapcomb_solo.png", dpi = 300, type = "cairo", width = 5, height = 10, units = "in",
#       path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
plot1 <- plot1 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
plot2 <- plot2 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
plot3 <- plot3 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
plot4 <- plot4 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
combplot_solo4by4 <- ggarrange(plot1, plot2, plot3,  plot4, ncol = 2, nrow = 2, labels = c("A", "B", "C", "D"), font.label = list(size = 20), vjust = 1.2)
ggsave(combplot_solo4by4, filename = "HeatMapcomb_solo_4x4_supplementary.png", dpi = 300, type = "cairo", width = 10, height = 10, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
ggsave(combplot_solo4by4, filename = "HeatMapcomb_solo_4x4_supplementary.png", dpi = 300, type = "cairo", width = 12, height = 10, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
plot1 <- plot1 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
plot2 <- plot2 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
plot3 <- plot3 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
plot4 <- plot4 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
combplot_solo4by4 <- ggarrange(plot1, plot2, plot3,  plot4, ncol = 2, nrow = 2, labels = c("A", "B", "C", "D"), font.label = list(size = 20), vjust = 1.2)
ggsave(combplot_solo4by4, filename = "HeatMapcomb_solo_4x4_supplementary.png", dpi = 300, type = "cairo", width = 12, height = 10, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
