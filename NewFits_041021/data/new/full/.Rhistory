dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
thetaparm <- c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = 0.01, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.01, phi = 0.01, kappa = 0.01, alpha = 0.01, zeta = 0.01, tau = 0.01)
out <- runsteady(y = init.state, func = fitmodel, times = c(0, Inf), parms = thetaparm)
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
zeta*Sa*(1-alpha) - zeta*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + zeta*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
thetaparm <- c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = 0.01, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.01, phi = 0.01, kappa = 0.01, alpha = 0.01, zeta = 0.01, tau = 0.01)
out <- runsteady(y = init.state, func = fitmodel, times = c(0, Inf), parms = thetaparm)
out <- ode(y = init.state, func = fitmodel, times = seq(0, 1000), parms = thetaparm)
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
zeta*Sa*(1-alpha) - zeta*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + zeta*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
thetaparm <- c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = 0.01, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.01, phi = 0.01, kappa = 0.01, alpha = 0.01, zeta = 0.01, tau = 0.01)
out <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
out <- ode(y = init.state, func = amr, times = seq(0, 1000), parms = thetaparm)
View(out)
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
zeta*Sa*(1-alpha) - zeta*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + zeta*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
thetaparm <- c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = 0.01, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.01, phi = 0.01, kappa = 0.01, alpha = 0.01, zeta = 0.01, tau = 0.01)
outruns <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
outdes <- ode(y = init.state, func = amr, times = seq(0, 1000), parms = thetaparm)
View(outruns)
View(outdes)
test <- read.csv("C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/data/new/full/ABC_post_ampbroil_10.csv")
test <- read.csv("C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/data/new/full/ABC_post_ampbroil_10.csv")
colMeans(test)
test <- read.csv("C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/data/new/full/ABC_post_tetbroil_10.csv")
colMeans(test)
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr")
rm(list=ls())
setwd("C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/data/new/full")
# Pairs Plot --------------------------------------------------------------
final_amp_post <- lapply(sapply(1:4, function(x) tail(grep(list.files(), pattern = c("post_ampbroil_10", "post_tetbroil_10", "post_amppigs_10", "post_tetpigs_10")[x], value = TRUE),1)), read.csv)
MAP_list <- lapply(1:4, function(x) map_estimate(final_amp_post[[x]]))
MAP_list
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr")
rm(list=ls())
setwd("C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/data/new/full")
# Pairs Plot --------------------------------------------------------------
final_amp_post <- lapply(sapply(1:4, function(x) tail(grep(list.files(), pattern = c("post_ampbroil_10", "post_tetbroil_10", "post_amppigs_10", "post_tetpigs_10")[x], value = TRUE),1)), read.csv)
plot_lower <- function(data, mapping){
p <- ggplot(data = data, mapping = mapping) + scale_x_continuous(expand = c(0,0))  + scale_y_continuous(expand = c(0,0)) +
stat_density2d(aes(fill=..density..), geom="tile", contour = FALSE) +
scale_fill_gradientn(colours=viridis::viridis(100))
return(p)
}
plot_diag <- function(data, mapping){
p <- ggplot(data = data, mapping = mapping) + scale_x_continuous(expand = c(0,0))  +
geom_density(fill = "grey", alpha = 0.3, size = 1.2) + theme_bw()
return(p)
}
final_amp_post
library("deSolve"); library("ggplot2"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("sensitivity"); library("fast"); library("metR");
library("grid"); library("gridExtra"); library("rootSolve"); library("metR")
rm(list=ls())
setwd("C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/data/new/full")
# Model Functions ----------------------------------------------------------
#Model ODEs
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
(0.5*zeta)*Sa*(1-alpha) - (0.5*zeta)*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + (0.5*zeta)*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + (0.5*zeta)*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
#Importing in the Datasets
import <- function(id) {
data <- data.frame(matrix(ncol = 6, nrow = 0))
for(i in 1:length(grep(paste0("post_", id), list.files(), value = TRUE))) {
test  <- cbind(read.csv(paste0("ABC_post_",substitute(id),"_",i,".csv"),
header = TRUE), "group" = paste0("data",i), "fit" = as.character(substitute(id)))
data <- rbind(data, test)
}
return(data)
}
# Identify the MAP for the Parameter Sets ---------------------------------
#Import of Posterior Distributions
data <- list(import("tetbroil"), import("ampbroil"), import("tetpigs"), import("amppigs"))
lapply(1:4, function(x) data[[x]]$group = factor(data[[x]]$group, levels = unique(data[[x]]$group)))
#Obtain the MAPs for each dataset
MAP <- rbind(c(colMeans(data[[2]][which(data[[2]]$group == tail(unique(data[[2]]$group),1)),][,1:6])),
c(colMeans(data[[1]][which(data[[1]]$group == tail(unique(data[[1]]$group),1)),][,1:6])),
c(colMeans(data[[4]][which(data[[4]]$group == tail(unique(data[[4]]$group),1)),][,1:6])),
c(colMeans(data[[3]][which(data[[3]]$group == tail(unique(data[[3]]$group),1)),][,1:6])))
colnames(MAP) <- c("betaAA", "phi", "kappa", "alpha", "zeta", "betaHA")
rownames(MAP) <- c("ampbroil", "tetbroil","amppigs", "tetpigs")
# Generic Heatmap Sensitivity Analysis - ICombH + ResRatio ------------------------
init <- c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
#These Parameters Are Based on MAP from Model Fitting
parms_ampbroil = c(ra = 0, rh = (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP["ampbroil","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["ampbroil","betaHA"], phi = MAP["ampbroil","phi"] ,
kappa = MAP["ampbroil","kappa"], alpha = MAP["ampbroil","alpha"] , tau = 0, zeta = MAP["ampbroil","zeta"])
parms_tetbroil = c(ra = 0, rh = (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP["tetbroil","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["tetbroil","betaHA"], phi = MAP["tetbroil","phi"],
kappa = MAP["tetbroil","kappa"], alpha = MAP["tetbroil","alpha"] , tau = 0,
zeta = MAP["tetbroil","zeta"])
parms_amppigs = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP["amppigs","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["amppigs","betaHA"], phi = MAP["amppigs","phi"],
kappa = MAP["amppigs","kappa"], alpha = MAP["amppigs","alpha"], tau = 0, zeta = MAP["amppigs","zeta"])
parms_tetpigs = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP["tetpigs","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["tetpigs","betaHA"], phi = MAP["tetpigs","phi"],
kappa = MAP["tetpigs","kappa"], alpha = MAP["tetpigs","alpha"], tau = 0, zeta = MAP["tetpigs","zeta"])
heatmap <- list()
for(j in 1:4) {
parms = list(parms_ampbroil, parms_tetbroil, parms_amppigs,parms_tetpigs)[[j]]
heatmap[[j]] = local({
parametertest <- list()
parms1 <- parms
i = 0
for(z in 1:3) {
if(z == 1) {
parameterspace <- expand.grid("betaAA" = seq(parms[["betaAA"]]*0.75, parms[["betaAA"]], by = (parms[["betaAA"]]*0.25)/25),
"betaHA" = seq(parms[["betaHA"]]*0.75, parms[["betaHA"]], by = parms[["betaHA"]]*0.25/25))
}
if(z == 2) {
parameterspace <- expand.grid("zeta" = seq(parms[["zeta"]]*0.75, parms[["zeta"]], by = (parms[["zeta"]]*0.25)/25),
"betaHA" = seq(parms[["betaHA"]]*0.75, parms[["betaHA"]], by = parms[["betaHA"]]*0.25/25))
}
if(z == 3) {
parameterspace <- expand.grid("both" = seq(0.75, 1, by = 0.01),
"betaHA" = seq(parms[["betaHA"]]*0.75, parms[["betaHA"]], by = parms[["betaHA"]]*0.25/25))
}
scendata <- data.frame(matrix(nrow = nrow(parameterspace), ncol = 10))
for(i in 1:nrow(parameterspace)) {
#print(paste0("HeatMap - ", c("tet_pigs", "tet_broil", "amp_pigs")[j]," | ", round(i/nrow(parameterspace), digits = 3)*100, "%"))
parms1["betaHA"] <- parameterspace[i,2]
if(z == 1) {
parms1["betaAA"] <- parameterspace[i,1]
}
if(z == 2) {
parms1["zeta"] <- parameterspace[i,1]
}
if(z == 3) {
parms1["betaAA"] <- parms["betaAA"]*parameterspace[i,1]
parms1["zeta"] <- parms["zeta"]*parameterspace[i,1]
}
out <- runsteady(y = init, func = amr, times = c(0, Inf), parms = parms1)
scendata[i,] <- c("icombh" = ((out[[2]] + out[[3]])*(446000000))/100000,
"prevH" =  out[[1]][["Ish"]] + out[[1]][["Irh"]],
"resrat" =  out[[1]][["Irh"]] / (out[[1]][["Ish"]] + out[[1]][["Irh"]]),
"betaAA" = parms[["betaAA"]],
"percbetaAA" = (parms1[["betaAA"]]/ parms[["betaAA"]])*100,
"betaHA" = parms1[["betaHA"]],
"percbetaHA" = (parms1[["betaHA"]]/ parms[["betaHA"]])*100,
"zeta" = parms1[["zeta"]],
"perczeta" = (parms1[["zeta"]]/ parms[["zeta"]])*100,
"percdecrease_both" = parameterspace[i,1]*100)
if(z == 1 | 2) {
scendata[["percdecrease_both"]] == 1
}
print(paste0(c("ampbroil", "tetbroil", "amppigs", "tetpigs")[j], " - " ,
c("beta 1", "zeta 2", "both 3")[z], " - ",round(i/nrow(parameterspace), digit = 2)*100, "%"))
}
colnames(scendata) <- c("icombh","prevH", "resrat", "betaAA","percbetaAA", "betaHA", "percbetaHA", "zeta", "perczeta", "percdecrease")
parametertest[[z]] <- scendata
}
return(parametertest)
})
}
ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks1, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks1, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(75, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
heatmap[[1]][[3]]
#Lone Plots
scentest1 <- heatmap[[1]][[3]]
scentest2 <- heatmap[[2]][[3]]
scentest3 <- heatmap[[3]][[3]]
scentest4 <- heatmap[[4]][[3]]
breaks1 <- c(0, seq(0.593, max(scentest1$icombh)+0.05, by = 0.02))
plot1 <- ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks1, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks1, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(75, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks2 <- c(0,  seq(0.593, max(scentest2$icombh)+0.05, by = 0.015))
plot1
plot1
scentest1 <- heatmap[[1]][[3]]
scentest2 <- heatmap[[2]][[3]]
scentest3 <- heatmap[[3]][[3]]
scentest4 <- heatmap[[4]][[3]]
breaks1 <- c(0, seq(0.593, max(scentest1$icombh)+0.05, by = 0.02))
plot1 <- ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks1, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks1, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(75, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks2 <- c(0,  seq(0.593, max(scentest2$icombh)+0.05, by = 0.015))
plot2 <- ggplot(scentest2, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks2, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]),
title = "Tetracycline Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks2, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks2, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(75, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks3 <- c(0,  seq(0.593, max(scentest3$icombh)+0.05, by = 0.025))
plot3 <- ggplot(scentest3, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks3, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Fattening Pigs") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks3, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks3, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(75, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks4 <- c(0,  seq(0.593, max(scentest4$icombh)+0.05, by = 0.03))
plot4 <- ggplot(scentest4, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks4, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Tetracycline Usage in Fattening Pigs") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks3, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks4, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(75, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
combplot_solo <- ggarrange(plot1, plot2, plot3,  plot4, ncol = 1, nrow = 4, labels = c("A", "B", "C", "D"), font.label = list(size = 20), vjust = 1.2)
ggsave(combplot_solo, filename = "HeatMapcomb_solo.png", dpi = 300, type = "cairo", width = 5, height = 10, units = "in",
path = "C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/figures")
plot1 <- plot1 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
plot2 <- plot2 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
plot3 <- plot3 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
plot4 <- plot4 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(1.7, "cm"))
combplot_solo4by4 <- ggarrange(plot1, plot2, plot3,  plot4, ncol = 2, nrow = 2, labels = c("A", "B", "C", "D"), font.label = list(size = 20), vjust = 1.2)
ggsave(combplot_solo4by4, filename = "HeatMapcomb_solo_4x4.png", dpi = 300, type = "cairo", width = 10, height = 10, units = "in",
path = "C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/figures")
library("deSolve"); library("ggplot2"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("sensitivity"); library("fast"); library("metR");
library("grid"); library("gridExtra"); library("rootSolve"); library("metR")
rm(list=ls())
setwd("C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/data/new/full")
# Model Functions ----------------------------------------------------------
#Model ODEs
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
(0.5*zeta)*Sa*(1-alpha) - (0.5*zeta)*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + (0.5*zeta)*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + (0.5*zeta)*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
#Importing in the Datasets
import <- function(id) {
data <- data.frame(matrix(ncol = 6, nrow = 0))
for(i in 1:length(grep(paste0("post_", id), list.files(), value = TRUE))) {
test  <- cbind(read.csv(paste0("ABC_post_",substitute(id),"_",i,".csv"),
header = TRUE), "group" = paste0("data",i), "fit" = as.character(substitute(id)))
data <- rbind(data, test)
}
return(data)
}
# Identify the MAP for the Parameter Sets ---------------------------------
#Import of Posterior Distributions
data <- list(import("tetbroil"), import("ampbroil"), import("tetpigs"), import("amppigs"))
lapply(1:4, function(x) data[[x]]$group = factor(data[[x]]$group, levels = unique(data[[x]]$group)))
#Obtain the MAPs for each dataset
MAP <- rbind(c(colMeans(data[[2]][which(data[[2]]$group == tail(unique(data[[2]]$group),1)),][,1:6])),
c(colMeans(data[[1]][which(data[[1]]$group == tail(unique(data[[1]]$group),1)),][,1:6])),
c(colMeans(data[[4]][which(data[[4]]$group == tail(unique(data[[4]]$group),1)),][,1:6])),
c(colMeans(data[[3]][which(data[[3]]$group == tail(unique(data[[3]]$group),1)),][,1:6])))
colnames(MAP) <- c("betaAA", "phi", "kappa", "alpha", "zeta", "betaHA")
rownames(MAP) <- c("ampbroil", "tetbroil","amppigs", "tetpigs")
# Generic Heatmap Sensitivity Analysis - ICombH + ResRatio ------------------------
init <- c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
#These Parameters Are Based on MAP from Model Fitting
parms_ampbroil = c(ra = 0, rh = (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP["ampbroil","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["ampbroil","betaHA"], phi = MAP["ampbroil","phi"] ,
kappa = MAP["ampbroil","kappa"], alpha = MAP["ampbroil","alpha"] , tau = 0, zeta = MAP["ampbroil","zeta"])
parms_tetbroil = c(ra = 0, rh = (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP["tetbroil","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["tetbroil","betaHA"], phi = MAP["tetbroil","phi"],
kappa = MAP["tetbroil","kappa"], alpha = MAP["tetbroil","alpha"] , tau = 0,
zeta = MAP["tetbroil","zeta"])
parms_amppigs = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP["amppigs","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["amppigs","betaHA"], phi = MAP["amppigs","phi"],
kappa = MAP["amppigs","kappa"], alpha = MAP["amppigs","alpha"], tau = 0, zeta = MAP["amppigs","zeta"])
parms_tetpigs = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP["tetpigs","betaAA"],
betaAH = 0.00001, betaHH = 0.00001, betaHA = MAP["tetpigs","betaHA"], phi = MAP["tetpigs","phi"],
kappa = MAP["tetpigs","kappa"], alpha = MAP["tetpigs","alpha"], tau = 0, zeta = MAP["tetpigs","zeta"])
heatmap <- list()
for(j in 1:4) {
parms = list(parms_ampbroil, parms_tetbroil, parms_amppigs,parms_tetpigs)[[j]]
heatmap[[j]] = local({
parametertest <- list()
parms1 <- parms
i = 0
for(z in 1:3) {
if(z == 1) {
parameterspace <- expand.grid("betaAA" = seq(parms[["betaAA"]]*0, parms[["betaAA"]], by = parms[["betaAA"]]/25),
"betaHA" = seq(parms[["betaHA"]]*0.75, parms[["betaHA"]], by = parms[["betaHA"]]*0.25/25))
}
if(z == 2) {
parameterspace <- expand.grid("zeta" = seq(parms[["zeta"]]*0, parms[["zeta"]], by = parms[["zeta"]]/25),
"betaHA" = seq(parms[["betaHA"]]*0.75, parms[["betaHA"]], by = parms[["betaHA"]]*0.25/25))
}
if(z == 3) {
parameterspace <- expand.grid("both" = seq(0, 1, by = 1/25),
"betaHA" = seq(parms[["betaHA"]]*0.75, parms[["betaHA"]], by = parms[["betaHA"]]*0.25/25))
}
scendata <- data.frame(matrix(nrow = nrow(parameterspace), ncol = 10))
for(i in 1:nrow(parameterspace)) {
#print(paste0("HeatMap - ", c("tet_pigs", "tet_broil", "amp_pigs")[j]," | ", round(i/nrow(parameterspace), digits = 3)*100, "%"))
parms1["betaHA"] <- parameterspace[i,2]
if(z == 1) {
parms1["betaAA"] <- parameterspace[i,1]
}
if(z == 2) {
parms1["zeta"] <- parameterspace[i,1]
}
if(z == 3) {
parms1["betaAA"] <- parms["betaAA"]*parameterspace[i,1]
parms1["zeta"] <- parms["zeta"]*parameterspace[i,1]
}
out <- runsteady(y = init, func = amr, times = c(0, Inf), parms = parms1)
scendata[i,] <- c("icombh" = ((out[[2]] + out[[3]])*(446000000))/100000,
"prevH" =  out[[1]][["Ish"]] + out[[1]][["Irh"]],
"resrat" =  out[[1]][["Irh"]] / (out[[1]][["Ish"]] + out[[1]][["Irh"]]),
"betaAA" = parms[["betaAA"]],
"percbetaAA" = (parms1[["betaAA"]]/ parms[["betaAA"]])*100,
"betaHA" = parms1[["betaHA"]],
"percbetaHA" = (parms1[["betaHA"]]/ parms[["betaHA"]])*100,
"zeta" = parms1[["zeta"]],
"perczeta" = (parms1[["zeta"]]/ parms[["zeta"]])*100,
"percdecrease_both" = parameterspace[i,1]*100)
if(z == 1 | 2) {
scendata[["percdecrease_both"]] == 1
}
print(paste0(c("ampbroil", "tetbroil", "amppigs", "tetpigs")[j], " - " ,
c("beta 1", "zeta 2", "both 3")[z], " - ",round(i/nrow(parameterspace), digit = 2)*100, "%"))
}
colnames(scendata) <- c("icombh","prevH", "resrat", "betaAA","percbetaAA", "betaHA", "percbetaHA", "zeta", "perczeta", "percdecrease")
parametertest[[z]] <- scendata
}
return(parametertest)
})
}
#Lone Plots
scentest1 <- heatmap[[1]][[3]]
scentest2 <- heatmap[[2]][[3]]
scentest3 <- heatmap[[3]][[3]]
scentest4 <- heatmap[[4]][[3]]
breaks1 <- c(0, seq(0.593, max(scentest1$icombh)+0.05, by = 0.02))
plot1 <- ggplot(scentest1, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks1, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks1, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks1, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks2 <- c(0,  seq(0.593, max(scentest2$icombh)+0.05, by = 0.015))
plot2 <- ggplot(scentest2, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks2, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]),
title = "Tetracycline Usage in Broiler Poultry") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks2, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks2, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks3 <- c(0,  seq(0.593, max(scentest3$icombh)+0.05, by = 0.025))
plot3 <- ggplot(scentest3, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks3, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Ampicillin Usage in Fattening Pigs") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks3, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks3, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
breaks4 <- c(0,  seq(0.593, max(scentest4$icombh)+0.05, by = 0.03))
plot4 <- ggplot(scentest4, aes(percdecrease, percbetaHA, z = icombh)) + metR::geom_contour_fill(breaks = breaks4, color = "black", size = 0.1)  +
labs(x = bquote("% of Baseline"~beta["AA"]~"and"~ zeta), y = bquote("% of Baseline"~beta["HA"]), fill = bquote("I*"["H"]), title = "Tetracycline Usage in Fattening Pigs") +
geom_contour(color = "red", size = 1, breaks = 0.593, alpha = 0.8) +
geom_text_contour(col = "white",nudge_y = -0.4, fontface = "bold", size = 5, breaks = breaks3, label.placer = label_placer_fraction(frac = 0.5),
stroke = 0.05, stroke.color = "black",) +
scale_fill_viridis_b(breaks = breaks4, direction = -1, begin = 0, end = 0.9, values = c(0, seq(0.75,1, by = 0.25/8))) +
scale_y_continuous(expand = c(0,0), limits = c(75, 100)) + scale_x_continuous(expand = c(0, 0), limits = c(0, 100)) + theme_bw() +
theme(legend.position = "right", legend.title = element_text(size=14), legend.text=element_text(size=12),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
plot.title = element_text(size = 15, vjust = 3, hjust = 0.1, face = "bold"),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.5,0.4,0.4,0.4),"cm"), legend.key.height =unit(0.7, "cm"),
legend.key.width =  unit(0.5, "cm"))
plot1 <- plot1 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
plot2 <- plot2 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
plot3 <- plot3 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
plot4 <- plot4 + theme(legend.position = "bottom", legend.key.height =unit(0.7, "cm"), legend.key.width =  unit(2, "cm"))
combplot_solo4by4 <- ggarrange(plot1, plot2, plot3,  plot4, ncol = 2, nrow = 2, labels = c("A", "B", "C", "D"), font.label = list(size = 20), vjust = 1.2)
ggsave(combplot_solo4by4, filename = "HeatMapcomb_solo_4x4_supplementary.png", dpi = 300, type = "cairo", width = 10, height = 10, units = "in",
path = "C:/Users/amorg/Documents/PhD/Chapter_2/Models/Github/Chapter-2/NewFits_041021/figures")
