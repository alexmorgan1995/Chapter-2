icombhdata <- data.frame(matrix(ncol = 8, nrow = 0))
ribbon_final <- data.frame()
for(j in 1:nrow(MAP)) {
output1 <- data.frame(matrix(NA, nrow = length(parmtau), ncol = 8))
output_ribbon <- data.frame()
ribbondata <- data_bind[data_bind$fit == unique(data_bind$fit)[j],]
ribbondata <- ribbondata[ribbondata$group == tail(unique(ribbondata$group),1),]
for (i in 1:length(parmtau)) {
temp_ribbon <- data.frame(matrix(NA, nrow = 100, ncol=4))
if(rownames(MAP)[j] == "ampbroil") {
parms2 = c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP[j,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = MAP[j,"betaHA"], phi = MAP[j,"phi"], kappa = MAP[j,"kappa"], alpha = MAP[j,"alpha"], tau = parmtau[i],
zeta = MAP[j,"zeta"])}
if(rownames(MAP)[j] == "tetbroil") {
parms2 = c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = MAP[j,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = MAP[j,"betaHA"], phi = MAP[j,"phi"], kappa = MAP[j,"kappa"], alpha = MAP[j,"alpha"], tau = parmtau[i],
zeta = MAP[j,"zeta"])}
if(rownames(MAP)[j] == "amppigs") {
parms2 = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP[j,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = MAP[j,"betaHA"], phi = MAP[j,"phi"], kappa = MAP[j,"kappa"], alpha = MAP[j,"alpha"], tau = parmtau[i],
zeta = MAP[j,"zeta"])}
if(rownames(MAP)[j] == "tetpigs") {
parms2 = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = MAP[j,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = MAP[j,"betaHA"], phi = MAP[j,"phi"], kappa = MAP[j,"kappa"], alpha = MAP[j,"alpha"], tau = parmtau[i],
zeta = MAP[j,"zeta"])}
out <- runsteady(y = init, func = amr, times = c(0, Inf), parms = parms2)
output1[i,1] <- parmtau[i]
output1[i,2] <- out$y["Sh"]
output1[i,3] <- (out[[2]]*(446000000))/100000
output1[i,4] <- (out[[3]]*(446000000))/100000
output1[i,5] <- ((out[[2]] + out[[3]])*(446000000))/100000
output1[i,6] <- out[[3]] / (out[[2]] + out[[3]])
output1[i,7] <- out$y["Ira"] / (out$y["Isa"] + out$y["Ira"])
output1[i,8] <- rownames(MAP)[j]
for(z in 1:100) {
if(rownames(MAP)[j] == "ampbroil") {
parms2 = c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = ribbondata[z,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = (0.00001), phi =  ribbondata[z,"phi"], kappa = ribbondata[z,"kappa"], alpha = ribbondata[z,"alpha"], tau = parmtau[i],
zeta = ribbondata[z,"zeta"])}
if(rownames(MAP)[j] == "tetbroil") {
parms2 = c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = ribbondata[z,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = (0.00001), phi =  ribbondata[z,"phi"], kappa = ribbondata[z,"kappa"], alpha = ribbondata[z,"alpha"], tau = parmtau[i],
zeta = ribbondata[z,"zeta"])}
if(rownames(MAP)[j] == "amppigs") {
parms2 = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = ribbondata[z,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = (0.00001), phi =  ribbondata[z,"phi"], kappa = ribbondata[z,"kappa"], alpha = ribbondata[z,"alpha"], tau = parmtau[i],
zeta = ribbondata[z,"zeta"])}
if(rownames(MAP)[j] == "tetpigs") {
parms2 = c(ra = 60^-1, rh = (5.5^-1), ua = 240^-1, uh = 28835^-1, betaAA = ribbondata[z,"betaAA"], betaAH = 0.00001, betaHH = 0.00001,
betaHA = (0.00001), phi =  ribbondata[z,"phi"], kappa = ribbondata[z,"kappa"], alpha = ribbondata[z,"alpha"], tau = parmtau[i],
zeta = ribbondata[z,"zeta"])}
out <- runsteady(y = init, func = amr, times = c(0, Inf), parms = parms2)
temp_ribbon[z,1] <- parmtau[i]
temp_ribbon[z,2] <- z
temp_ribbon[z,3] <- out$y["Ira"] / (out$y["Isa"] + out$y["Ira"])
temp_ribbon[z,4] <- rownames(MAP)[j]
print(paste0(temp_ribbon[z,4], ", tau: ", temp_ribbon[z,1], ", ", (z/1000)*100, "%"))
}
output_ribbon <- rbind.data.frame(output_ribbon, temp_ribbon)
}
icombhdata <- rbind(icombhdata, output1)
ribbon_final <- rbind(ribbon_final, output_ribbon)
}
colnames(icombhdata)[1:8] <- c("tau", "SuscHumans","InfHumans","ResInfHumans","ICombH","IResRat","IResRatA", "group")
colnames(ribbon_final)[1:4] <- c("tau","particle","IResRatA", "group")
HDI_ribbon <- data.frame()
for(j in 1:length(unique(ribbon_final$group))) {
for(i in 1:length(unique(ribbon_final$tau))) {
HDI_ribbon <- rbind(HDI_ribbon,
data.frame("tau" = unique(ribbon_final$tau)[i],
"lowHDI" = hdi(ribbon_final$IResRatA[ribbon_final$tau == unique(ribbon_final$tau)[i] & ribbon_final$group == unique(ribbon_final$group)[j]], credMass = 0.95)[[2]],
"highHDI" = hdi(ribbon_final$IResRatA[ribbon_final$tau == unique(ribbon_final$tau)[i] & ribbon_final$group == unique(ribbon_final$group)[j]], credMass = 0.95)[[3]],
"scen" = unique(ribbon_final$group)[j]))
}
}
end_time <- Sys.time(); end_time - start_time
amp_broil <- ggplot(melt_amp_broil, aes(x = usage/1000, y= Resistance))  + geom_point() + theme_bw() +
scale_x_continuous(limits = c(0,(max(melt_amp_broil$usage)/1000)*1.05), expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0), limits = c(0,1)) +
labs(x ="Broiler Poultry Ampicillin Sales (g/PCU)", y = "Ampicillin-Resistant Broiler Poultry Carriage") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=1.01, inherit.aes =  TRUE) +
geom_line(data = icombhdata[icombhdata$group == "ampbroil",], aes(x = tau, y= IResRatA), col = "red", size = 1.1)+
geom_ribbon(data = HDI_ribbon[HDI_ribbon$scen == "ampbroil",],
aes(x = tau ,ymin = lowHDI, ymax = highHDI), fill = "hotpink", alpha = 0.7, inherit.aes=FALSE) +
theme(legend.text=element_text(size=12), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(1,1,1,1), "cm"))
tet_broil <- ggplot(melt_tet_broil, aes(x = usage/1000, y= Resistance))  + geom_point() + theme_bw() +
scale_x_continuous(limits = c(0,(max(melt_tet_broil$usage)/1000)*1.05), expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0), limits = c(0,1)) +
labs(x ="Broiler Poultry Tetracycline Sales (g/PCU)", y = "Tetracycline-Resistant Broiler Poultry Carriage") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=1.01, inherit.aes =  TRUE) +
geom_ribbon(data = HDI_ribbon[HDI_ribbon$scen == "tetbroil",],
aes(x = tau ,ymin = lowHDI, ymax = highHDI), fill = "hotpink", alpha = 0.7, inherit.aes=FALSE) +
geom_line(data = icombhdata[icombhdata$group == "tetbroil",], aes(x = tau, y= IResRatA), col = "red", size = 1.1)+
theme(legend.text=element_text(size=12), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(1,1,1,1), "cm"))
amp_pig <- ggplot(melt_amp_pigs, aes(x = usage/1000, y= Resistance))  + geom_point() + theme_bw() +
scale_x_continuous(limits = c(0,(max(melt_amp_pigs$usage)/1000)*1.05),expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0), limits = c(0,1)) +
labs(x ="Fattening Pig Ampicillin Sales (g/PCU)", y = "Ampicillin-Resistant Fattening Pig Carriage") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=1.01, inherit.aes =  TRUE) +
geom_line(data = icombhdata[icombhdata$group == "amppigs",], aes(x = tau, y= IResRatA), col = "red", size = 1.1) +
geom_ribbon(data = HDI_ribbon[HDI_ribbon$scen == "amppigs",],
aes(x = tau ,ymin = lowHDI, ymax = highHDI), fill = "hotpink", alpha = 0.7, inherit.aes=FALSE) +
theme(legend.text=element_text(size=12), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(1,1,1,1), "cm"))
tet_pig <- ggplot(melt_tet_pigs, aes(x = usage/1000, y= Resistance))  + geom_point() + theme_bw() +
scale_x_continuous(limits = c(0,(max(melt_tet_pigs$usage)/1000)*1.05), expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0), limits = c(0,1)) +
labs(x ="Fattening Pig Tetracycline Sales (g/PCU)", y = "Tetracycline-Resistant Fattening Pig Carriage") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=1.01, inherit.aes =  TRUE) +
geom_ribbon(data = HDI_ribbon[HDI_ribbon$scen == "tetpigs",],
aes(x = tau ,ymin = lowHDI, ymax = highHDI), fill = "hotpink", alpha = 0.7, inherit.aes=FALSE) +
geom_line(data = icombhdata[icombhdata$group == "tetpigs",], aes(x = tau, y= IResRatA), col = "red", size = 1.1) +
theme(legend.text=element_text(size=12), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(1,1,1,1), "cm"))
fits <- ggarrange(amp_broil, tet_broil,amp_pig, tet_pig, nrow = 2, ncol = 2, align = "h", labels = c("A","B", "C", "D"), font.label = c(size = 20),
common.legend = TRUE, legend = "bottom")
ggsave(fits, filename = "Model_Fits_v1.png", dpi = 300, type = "cairo", width = 14, height = 10, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
icombhlist <- list()
#amp_broil, tet_broil, amp_pigs, tet_pigs
averagesales <- sapply(list(melt_amp_broil$usage, melt_tet_broil$usage, melt_amp_pigs$usage, melt_tet_pigs$usage), mean)/1000
for(i in 1:4){
icombhlist[[i]] <- local({
plotdata <- melt(icombhdata[icombhdata$group == unique(icombhdata$group)[i],],
id.vars = c("tau"), measure.vars = c("ResInfHumans","InfHumans"))
p1 <- ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 2.5), expand = c(0, 0))  +
geom_text(label= c(round(icombhdata$IResRat[icombhdata$group == unique(icombhdata$group)[i]],digits = 2),rep("",length(parmtau))),vjust=-0.5, hjust = 0.05,
position = "stack", angle = 45) +
theme(legend.position=c(0.75, 0.875), legend.text=element_text(size=12), legend.title = element_blank(), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(0.35,1,0.35,1), "cm"),
legend.spacing.x = unit(0.3, 'cm')) +
scale_fill_manual(labels = c("Antibiotic-Resistant Infection", "Antibiotic-Sensitive Infection"), values = c("#F8766D", "#619CFF"))
if(unique(icombhdata$group)[i] == "ampbroil") {
p1 <- p1 + labs(x ="Ampicillin Usage in Broiler Poultry (g/PCU)", y = "Inf Humans (per 100,000)")
}
if(unique(icombhdata$group)[i] == "tetbroil") {
p1 <- p1 + labs(x ="Tetracycline Usage in Broiler Poultry (g/PCU)", y = "Inf Humans (per 100,000)")
}
if(unique(icombhdata$group)[i] == "amppigs") {
p1 <- p1 + labs(x ="Ampicillin Usage in Fattening Pigs (g/PCU)", y = "Inf Humans (per 100,000)")
}
if(unique(icombhdata$group)[i] == "tetpigs") {
p1 <- p1 + labs(x ="Tetracycline Usage in Fattening Pigs (g/PCU)", y = "Inf Humans (per 100,000)")
}
return(p1)
})
}
import <- function(id) {
data <- data.frame(matrix(ncol = 6, nrow = 0))
for(i in 1:length(grep(id, list.files(), value = TRUE))) {
test  <- cbind(read.csv(paste0("ABC_post_",substitute(id),"_",i,".csv"),
header = TRUE), "group" = paste0("data",i), "fit" = as.character(substitute(id)))
data <- rbind(data, test)
}
return(data)
}
ggsave(icombh, filename = "Icombh.png", dpi = 300, type = "cairo", width = 8, height = 11, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
icombh <- ggarrange(icombhlist[[1]], icombhlist[[2]],
icombhlist[[3]], icombhlist[[4]],
nrow = 2, ncol = 2, align = "v", labels = c("A","B", "C", "D"), font.label = c(size = 20),
common.legend = TRUE, legend = "bottom")
icombhlist[[3]]
icombhlist[[4]]
icombhlist[[2]]
icombhlist[[1]]
icombhlist[[3]]
icombhdata
plotdata <- melt(icombhdata[icombhdata$group == unique(icombhdata$group)[3],],
id.vars = c("tau"), measure.vars = c("ResInfHumans","InfHumans"))
plotdata
ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 2.5), expand = c(0, 0))  +
geom_text(label= c(round(icombhdata$IResRat[icombhdata$group == unique(icombhdata$group)[i]],digits = 2),rep("",length(parmtau))),vjust=-0.5, hjust = 0.05,
position = "stack", angle = 45) +
theme(legend.position=c(0.75, 0.875), legend.text=element_text(size=12), legend.title = element_blank(), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(0.35,1,0.35,1), "cm"),
legend.spacing.x = unit(0.3, 'cm')) +
scale_fill_manual(labels = c("Antibiotic-Resistant Infection", "Antibiotic-Sensitive Infection"), values = c("#F8766D", "#619CFF"))
ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 2.5), expand = c(0, 0))
averagesales
ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2)
ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 3), expand = c(0, 0))
ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0))
ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0))  +
geom_text(label= c(round(icombhdata$IResRat[icombhdata$group == unique(icombhdata$group)[i]],digits = 2),rep("",length(parmtau))),vjust=-0.5, hjust = 0.05,
position = "stack", angle = 45)
ribbondata
ribbondata[z,"zeta"]
MAP
ribbondata
plotdata <- melt(icombhdata[icombhdata$group == unique(icombhdata$group)[1],],
id.vars = c("tau"), measure.vars = c("ResInfHumans","InfHumans"))
p1 <- ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0))  +
geom_text(label= c(round(icombhdata$IResRat[icombhdata$group == unique(icombhdata$group)[i]],digits = 2),rep("",length(parmtau))),vjust=-0.5, hjust = 0.05,
position = "stack", angle = 45) +
theme(legend.position=c(0.75, 0.875), legend.text=element_text(size=12), legend.title = element_blank(), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(0.35,1,0.35,1), "cm"),
legend.spacing.x = unit(0.3, 'cm')) +
scale_fill_manual(labels = c("Antibiotic-Resistant Infection", "Antibiotic-Sensitive Infection"), values = c("#F8766D", "#619CFF"))
p1
plotdata <- melt(icombhdata[icombhdata$group == unique(icombhdata$group)[2],],
id.vars = c("tau"), measure.vars = c("ResInfHumans","InfHumans"))
p1 <- ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0))  +
geom_text(label= c(round(icombhdata$IResRat[icombhdata$group == unique(icombhdata$group)[i]],digits = 2),rep("",length(parmtau))),vjust=-0.5, hjust = 0.05,
position = "stack", angle = 45) +
theme(legend.position=c(0.75, 0.875), legend.text=element_text(size=12), legend.title = element_blank(), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(0.35,1,0.35,1), "cm"),
legend.spacing.x = unit(0.3, 'cm')) +
scale_fill_manual(labels = c("Antibiotic-Resistant Infection", "Antibiotic-Sensitive Infection"), values = c("#F8766D", "#619CFF"))
plotdata
ggplot(plotdata, aes(fill = variable, x = tau, y = value)) + theme_bw() +
geom_vline(xintercept = averagesales[i], alpha = 0.3, size = 2) +
geom_col(color = "black",position= "stack", width  = 0.002) + scale_x_continuous(expand = c(0, 0.0005)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0))  +
geom_text(label= c(round(icombhdata$IResRat[icombhdata$group == unique(icombhdata$group)[i]],digits = 2),rep("",length(parmtau))),vjust=-0.5, hjust = 0.05,
position = "stack", angle = 45) +
theme(legend.position=c(0.75, 0.875), legend.text=element_text(size=12), legend.title = element_blank(), axis.text=element_text(size=12),
axis.title.y=element_text(size=12), axis.title.x= element_text(size=12), plot.margin = unit(c(0.35,1,0.35,1), "cm"),
legend.spacing.x = unit(0.3, 'cm')) +
scale_fill_manual(labels = c("Antibiotic-Resistant Infection", "Antibiotic-Sensitive Infection"), values = c("#F8766D", "#619CFF"))
icombhdata
ribbondata
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
zeta*Sa*(1-alpha) - zeta*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + zeta*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
thetaparm <- c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = 0.049883016, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.0017667996, phi = 2.0263285, kappa = 285.05972, alpha = 0.2627027, tau = 0,
zeta = 0.2504847)
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
out_runsteady <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
out_runsteady
thetaparm <- c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = 0.049883016, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.0017667996, phi = 2.0263285, kappa = 285.05972, alpha = 0.2627027, tau = 0,
zeta = 0.1)
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
zeta*Sa*(1-alpha) - zeta*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + zeta*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
thetaparm <- c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = 0.049883016, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.0017667996, phi = 2.0263285, kappa = 285.05972, alpha = 0.2627027, tau = 0,
zeta = 0.1)
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
out_runsteady <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
out_runsteady$y["Irh"] / (out_runsteady$y["Ish"] + out_runsteady$y["Irh"])
out_ode <- ode(y = init.state, func = amr, times = seq(0, 10000), parms = thetaparm)
out_runsteady
thetaparm <- c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = 0.049883016, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.0017667996, phi = 2.0263285, kappa = 2.05972, alpha = 0.2627027, tau = 0,
zeta = 0.1)
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
out_runsteady <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
out_runsteady
thetaparm <- c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = 0.049883016, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.0017667996, phi = 0.5, kappa = 2.05972, alpha = 0.2627027, tau = 0,
zeta = 0.1)
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
out_runsteady <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
out_runsteady
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
zeta*Sa*(1-alpha) - zeta*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + zeta*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
thetaparm <- c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = 0.049883016, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.0017667996, phi = 0.5, kappa = 2.05972, alpha = 0.2627027, tau = 0,
zeta = 0.1)
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
out_runsteady <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
out_runsteady$y["Irh"] / (out_runsteady$y["Ish"] + out_runsteady$y["Irh"])
library("deSolve"); library("ggplot2"); library("plotly"); library("reshape2")
library("bayestestR"); library("tmvtnorm"); library("ggpubr"); library("rootSolve")
rm(list=ls())
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data")
#Model
amr <- function(t, y, parms) {
with(as.list(c(y, parms)), {
dSa = ua + ra*(Isa + Ira) + kappa*tau*Isa - (betaAA*Isa*Sa) - (betaAH*Ish*Sa) - (1-alpha)*(betaAH*Irh*Sa) - (1-alpha)*(betaAA*Ira*Sa) - ua*Sa -
zeta*Sa*(1-alpha) - zeta*Sa
dIsa = betaAA*Isa*Sa + betaAH*Ish*Sa + phi*Ira - kappa*tau*Isa - tau*Isa - ra*Isa - ua*Isa + zeta*Sa
dIra = (1-alpha)*betaAH*Irh*Sa + (1-alpha)*betaAA*Ira*Sa + tau*Isa - phi*Ira - ra*Ira - ua*Ira + zeta*Sa*(1-alpha)
dSh = uh + rh*(Ish+Irh) - (betaHH*Ish*Sh) - (1-alpha)*(betaHH*Irh*Sh) - (betaHA*Isa*Sh) - (1-alpha)*(betaHA*Ira*Sh) - uh*Sh
dIsh = betaHH*Ish*Sh + betaHA*Isa*Sh - rh*Ish - uh*Ish
dIrh = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh) - rh*Irh - uh*Irh
CumS = betaHH*Ish*Sh + betaHA*Isa*Sh
CumR = (1-alpha)*(betaHH*Irh*Sh) + (1-alpha)*(betaHA*Ira*Sh)
return(list(c(dSa,dIsa,dIra,dSh,dIsh,dIrh), CumS, CumR))
})
}
thetaparm <- c(ra = 0, rh =  (5.5^-1), ua = 42^-1, uh = 28835^-1, betaAA = 0.049883016, betaAH = 0.00001, betaHH = 0.00001,
betaHA = 0.0017667996, phi = 0.01, kappa = 2.05972, alpha = 0.2627027, tau = 0,
zeta = 0.1)
init.state = c(Sa=0.98, Isa=0.01, Ira=0.01, Sh=1, Ish=0, Irh=0)
out_runsteady <- runsteady(y = init.state, func = amr, times = c(0, Inf), parms = thetaparm)
out_runsteady$y["Irh"] / (out_runsteady$y["Ish"] + out_runsteady$y["Irh"])
post_dist_names <- grep("TESTABC_post_tetpigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
post_dist_names <- grep("TESTABC_post_tetpigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
post_dist_names <- grep("ABC_post_ampbroil_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
post_dist_names <- grep("ABC_post_tetbroil_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
post_dist_names <- grep("ABC_post_amppigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/test"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
post_dist_names <- grep("TESTABC_post_amppigs_",
list.files("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/test"), value = TRUE)
post_dist <- lapply(post_dist_names, read.csv)
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
post_dist_names
setwd("//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Models/Chapter-2/NewFits_041021/data/test")
post_dist <- lapply(post_dist_names, read.csv)
post_dist
post_dist <- mapply(cbind, post_dist, "gen" = sapply(1:length(post_dist), function(x) paste0("gen_", x)),
SIMPLIFY=F)
post_dist <- do.call("rbind", post_dist)
maps_est <- map_estimate(post_dist[post_dist$gen == tail(unique(post_dist$gen),1),][,1:6])
p_list <- list()
for(i in 1:(length(post_dist)-1)) {
p_list[[i]] <- local ({
name_exp <- post_dist[,c(i,7)]
p <- ggplot(name_exp, aes(x= name_exp[,1], fill=gen)) + geom_density(alpha=.5) +
geom_vline(xintercept = maps_est[i,2], size = 1.2, col = "red") +
scale_x_continuous(expand = c(0, 0), name = colnames(post_dist)[-7][i]) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.text=element_text(size=14),axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14), plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"))
return(p)
})
}
p_list
ggarrange(p_list[[1]], p_list[[2]], p_list[[3]],
p_list[[4]], p_list[[5]], p_list[[6]],
ncol = 2, nrow = 3)
ggsave(p, filename = "test_dist.png", dpi = 300, type = "cairo", width = 14, height = 9, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
p <- ggarrange(p_list[[1]], p_list[[2]], p_list[[3]],
p_list[[4]], p_list[[5]], p_list[[6]],
ncol = 2, nrow = 3, common.legend = TRUE)
ggsave(p, filename = "test_dist.png", dpi = 300, type = "cairo", width = 14, height = 9, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
p <- ggarrange(p_list[[1]], p_list[[2]], p_list[[3]],
p_list[[4]], p_list[[5]], p_list[[6]],
ncol = 2, nrow = 3, common.legend = TRUE, legend = "bottom")
ggsave(p, filename = "test_dist.png", dpi = 300, type = "cairo", width = 14, height = 9, units = "in",
path = "//csce.datastore.ed.ac.uk/csce/biology/users/s1678248/PhD/Chapter_2/Figures/comb_data")
